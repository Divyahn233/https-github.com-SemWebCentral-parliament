plugins {
	id 'org.springframework.boot' version '2.3.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

sourceCompatibility = '1.8'

ext {
	genJavaDir = file("$buildDir/generated/java")
}

dependencies {
	implementation fileTree(include: ['*.jar'], dir: 'libs')

	//implementation 'org.apache.commons:commons-io:1.3.2'
	implementation 'commons-fileupload:commons-fileupload:1.3.3'

	implementation('org.apache.jena:jena-arq:2.9.4') {
		exclude group: 'commons-logging', module: 'commons-logging'
	}
	implementation 'org.slf4j:slf4j-api:1.7.21'
	implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.13.3'
	implementation 'org.slf4j:jcl-over-slf4j:1.7.21'


	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

	implementation 'io.rest-assured:rest-assured:4.2.0'
	implementation 'io.rest-assured:json-path:4.2.0'
	implementation 'io.rest-assured:xml-path:4.2.0'
	implementation 'org.hamcrest:hamcrest:2.2'
}

configurations {
	all {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
}

sourceSets {
	main {
		java { srcDir genJavaDir }
	}
}

// See https://jena.apache.org/documentation/tools/schemagen.html
task runSchemagen(type: JavaExec) {
	classpath = sourceSets.main.compileClasspath
	main = 'jena.schemagen'
	args = [
		'-i', "${projectDir}/src/main/resources/config-ont.ttl",
		'-o', "${genJavaDir}",
		'--owl',
		'-n', 'ConfigOnt',
		'--package', 'com.bbn.parliament.jena.bridge.configuration.vocab'
	]
}

compileJava.dependsOn runSchemagen

test {
	useJUnitPlatform()
	systemProperty 'java.library.path', "${rootDir}/target/Parliament-v2.7.14-clang/bin"
	environment 'LD_LIBRARY_PATH', "${rootDir}/target/Parliament-v2.7.14-gcc/bin"
	environment 'Path', "${rootDir}/target/Parliament-v2.7.14-msvc/bin;${System.getenv("Path")}"
}

task copyTestResources(type: Copy) {
	from '${projectDir}/src/test/resources'
	into '${buildDir}/classes/java/test'
}

subprojects {
	junitPlatformTest.dependsOn copyTestResources
}
